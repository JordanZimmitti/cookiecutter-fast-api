
# Configures the operating system
ARG PYTHON_VERSION
FROM python:$PYTHON_VERSION-alpine as os

# Creates environment variables from docker arguments
ARG POETRY_VERSION
ARG PYTHON_VERSION
ENV PYTHON_VERSION=$PYTHON_VERSION
ENV POETRY_VERSION=$POETRY_VERSION
ENV PYTHONUNBUFFERED=1

# Installs/Updates linux packages
RUN apk update
RUN apk add curl gcc libffi-dev libressl-dev make musl-dev

# Creates the group and user the project should run in
RUN addgroup --gid 1000 appuser
RUN adduser --uid 1000 --ingroup appuser --disabled-password --home appuser appuser

# Sets the project working directory
WORKDIR /home/appuser
RUN chown -R appuser:appuser .

# Updates pip defaults, installs poetry, then uninstalls pip and curl
RUN pip install --upgrade certifi setuptools wheel
RUN curl -ssl https://install.python-poetry.org | python -
RUN pip uninstall pip -y
RUN apk del curl
ENV PATH="${PATH}:/root/.local/bin"

# Configures poetry for use
RUN poetry config virtualenvs.create false
COPY poetry.lock .
COPY pyproject.toml .


# Configures running the API unit tests
FROM os as api_unit_tests

# Installs the API dependencies with test dependencies
RUN poetry install --no-root --with main --with test

# Copies the API project and unit tests into the docker container
COPY .coveragerc .coveragerc
COPY {{cookiecutter.package_name}} {{cookiecutter.package_name}}
COPY scripts/run_tests.sh scripts/run_tests.sh
COPY tests/api tests/api
COPY tests/unit tests/unit
COPY tests/mocks tests/mocks
COPY tests/pytest.env tests/pytest.env
COPY tests/pytest.ini tests/pytest.ini

# Starts the API unit tests
USER appuser
ENTRYPOINT ["sh", "scripts/run_tests.sh"]


# Configures running the API
FROM os as api

# Installs the API only dependencies
RUN poetry install --no-root --only main

# Copies the API project into the docker container
COPY {{cookiecutter.package_name}} {{cookiecutter.package_name}}
COPY scripts/entrypoint.sh scripts/entrypoint.sh

# Exposes the port that the API server runs on
EXPOSE 2000

# Starts the API server
USER appuser
ENTRYPOINT ["sh", "scripts/entrypoint.sh"]